:host {
  display: block;
}

// Current time indicator styles (same as week view)
.current-time-indicator {
  z-index: 50;
  pointer-events: none;

  .time-label {
    animation: currentTimePulse 2s ease-in-out infinite;
    font-weight: 600;
    letter-spacing: 0.5px;
  }

  .time-line {
    position: relative;

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 100%;
      background: linear-gradient(
        90deg,
        rgba(59, 130, 246, 0.8),
        rgba(59, 130, 246, 0.6),
        rgba(59, 130, 246, 0.8)
      );
      animation: currentTimeGlow 3s ease-in-out infinite;
    }
  }

  .time-dot {
    animation: currentTimeDot 2s ease-in-out infinite;
    box-shadow: 0 0 8px rgba(59, 130, 246, 0.6);
  }
}

@keyframes currentTimePulse {
  0%,
  100% {
    transform: scale(1);
    opacity: 0.9;
  }
  50% {
    transform: scale(1.05);
    opacity: 1;
  }
}

@keyframes currentTimeGlow {
  0%,
  100% {
    opacity: 0.6;
    filter: blur(0px);
  }
  50% {
    opacity: 0.8;
    filter: blur(1px);
  }
}

@keyframes currentTimeDot {
  0%,
  100% {
    transform: scale(1);
    box-shadow: 0 0 8px rgba(59, 130, 246, 0.6);
  }
  50% {
    transform: scale(1.2);
    box-shadow: 0 0 12px rgba(59, 130, 246, 0.8);
  }
}

.time-slot-container {
  position: relative;
  overflow: visible;
}

.appointment-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  overflow: visible;
  z-index: 1;
}

.appointment-wrapper app-appointment-card {
  display: block;
  height: 100%;
}

// Overlapping appointments styles
.appointments-container {
  .appointment-column {
    position: absolute;

    &.column-0 {
      z-index: 30;
    }

    &.column-1 {
      z-index: 29;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }

    &.column-2 {
      z-index: 28;
      box-shadow: 0 8px 10px -2px rgba(0, 0, 0, 0.15),
        0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }
  }
}

// Ensure appointments align with time slot borders
.appointment-card-wrapper {
  // Remove any margin or padding that could misalign appointments
  margin: 0;
  padding: 0;

  // Ensure lower z-index than forms/modals (which typically use z-index: 50+)
  z-index: 30 !important;

  // Ensure the appointment card fills the allocated space precisely
  app-appointment-card {
    display: block;
    height: 100%;
    width: 100%;

    // Ensure the inner card content aligns with borders
    > div {
      height: 100%;
      box-sizing: border-box;
    }
  }
}

// Add button styling
.add-appointment-area {
  transition: all 0.2s ease-in-out;

  &:hover {
    transform: scale(1.05);
  }

  .ri-add-line {
    transition: all 0.2s ease-in-out;
  }
}

// Time slot hover effect
.time-slot-row {
  &:hover {
    .add-appointment-area {
      border-color: theme("colors.blue.400");
      background-color: theme("colors.blue.50");

      .ri-add-line {
        color: theme("colors.blue.500");
      }
    }
  }
}

// Dark mode adjustments
.dark {
  .time-slot-row:hover {
    .add-appointment-area {
      border-color: theme("colors.blue.600");
      background-color: theme("colors.blue.900/40");

      .ri-add-line {
        color: theme("colors.blue.400");
      }
    }
  }

  // Enhanced dark mode styling for restricted time slot clickable areas
  // Better contrast for restricted areas in dark mode
  .bg-gray-50 {
    background-color: rgba(55, 65, 81, 0.6) !important; // Slightly more visible
    border-color: rgba(75, 85, 99, 0.8) !important; // darker border
  }
}

// Ensure appointment cards are never affected by any global restrictions
.appointment-card-wrapper {
  // Override any inherited restrictions
  opacity: 1 !important;

  app-appointment-card {
    opacity: 1 !important;

    // Ensure appointment cards maintain full visibility
    > div {
      opacity: 1 !important;
    }
  }
}

// Remove global restricted time slot styling since we handle it per element now
// This ensures only the clickable areas are grayed out, not the entire time slot or appointments

// Individual element styling for restricted states is now handled inline in the HTML

// Restricted time slots styling (exactly matching week view)
.restricted-time-slot {
  background-color: #f3f4f6 !important; // Light mode: same as week view
  cursor: not-allowed !important;

  &:hover {
    background-color: #f3f4f6 !important;
  }
}

// Dark mode styling for restricted time slots
:host-context(.dark) .restricted-time-slot {
  background-color: #374151 !important; // gray-700 equivalent - same as week view

  &:hover {
    background-color: #374151 !important;
  }
}

// Weekend time slots styling (exactly matching week view)
.weekend-time-slot {
  background-color: #f9fafb !important; // Very light gray - same as week view

  &:hover {
    background-color: #f3f4f6 !important; // Slightly darker gray on hover
  }
}

// Dark mode styling for weekend time slots
:host-context(.dark) .weekend-time-slot {
  background-color: #1f2937 !important; // gray-800 equivalent - same as week view

  &:hover {
    background-color: #374151 !important; // gray-700 equivalent
  }
}

// Holiday time slots styling (exactly matching week view)
.holiday-time-slot {
  background-color: #fef3c7 !important; // Light amber for holidays - same as week view

  &:hover {
    background-color: #fde68a !important; // Slightly darker amber on hover
  }
}

// Dark mode styling for holiday time slots
:host-context(.dark) .holiday-time-slot {
  background-color: #451a03 !important; // amber-900 equivalent - same as week view

  &:hover {
    background-color: #78350f !important; // amber-800 equivalent
  }
}

// Past time slots styling
.past-time-slot {
  background-color: #f3f4f6 !important; // Same as restricted
  cursor: not-allowed !important;

  &:hover {
    background-color: #f3f4f6 !important;
  }
}

// Dark mode styling for past time slots
:host-context(.dark) .past-time-slot {
  background-color: #374151 !important; // gray-700 equivalent

  &:hover {
    background-color: #374151 !important;
  }
}

// Restricted clickable area styling (for the clickable zones)
.restricted-clickable-area {
  cursor: not-allowed !important;
  opacity: 0.5 !important;
  background-color: #f3f4f6 !important;
  border-color: #d1d5db !important; // gray-300

  &:hover {
    background-color: #f3f4f6 !important;
    border-color: #d1d5db !important;
  }
}

// Dark mode styling for restricted clickable areas
:host-context(.dark) .restricted-clickable-area {
  background-color: #374151 !important; // gray-700
  border-color: #4b5563 !important; // gray-600

  &:hover {
    background-color: #374151 !important;
    border-color: #4b5563 !important;
  }
}
.holiday-time-slot {
  background-color: #fef3c7 !important; // Light amber for holidays

  &:hover {
    background-color: #fde68a !important; // Slightly darker amber on hover
  }
}

// Dark mode styling for holiday time slots
:host-context(.dark) .holiday-time-slot {
  background-color: #451a03 !important; // amber-900 equivalent

  &:hover {
    background-color: #78350f !important; // amber-800 equivalent
  }
}

// Past time slot styling (clean dimming)
.past-time-slot {
  opacity: 0.6 !important;
  pointer-events: none;
}

// Clean styling for restricted clickable areas
.restricted-clickable-area {
  background-color: #f3f4f6 !important;
  border-color: #d1d5db !important;
  cursor: not-allowed !important;
  opacity: 0.7 !important;

  &:hover {
    background-color: #f3f4f6 !important;
    border-color: #d1d5db !important;
  }
}

// Dark mode for restricted clickable areas
:host-context(.dark) .restricted-clickable-area {
  background-color: #374151 !important;
  border-color: #4b5563 !important;

  &:hover {
    background-color: #374151 !important;
    border-color: #4b5563 !important;
  }
}
